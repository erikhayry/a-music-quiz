"use strict";var LoginView=React.createClass({displayName:"LoginView",getInitialState:function(){return{loginUrl:""}},login:function(){log("Login: login"),spotifyService.login().then(function(a){this.setState({loginUrl:a.redirect_url})}.bind(this))},tryLogin:function(){log("Login: tryLogin");var a=Helpers.getQueries(window.location.search),b=sessionStorage.getItem("amq-user")||spotifyService.getTokens(window.location.search).accessToken;a.debug&&localStorage.setItem("amq-debug",a.debug),a.mute&&localStorage.setItem("amq-mute",a.mute),a.owner&&a.id&&sessionStorage.setItem("amq-game",JSON.stringify({owner:a.owner,id:a.id})),b?spotifyService.getUser(b).then(function(a){log("Login: got user"),log(a),sessionStorage.setItem("amq-user",b);var c=JSON.parse(sessionStorage.getItem("amq-game"));c?(log("Login: using stored game"),sessionStorage.removeItem("amq-game"),this.props.onPlay(c.owner,c.id)):(log("Login: auth"),this.props.onAuth(a.id))}.bind(this),function(){log("Login: failed to get user"),sessionStorage.removeItem("amq-user"),this.login()}.bind(this)):this.login()},render:function(){log("Login: render");var a="",b="";return this.state.loginUrl?a=React.DOM.div({className:"m-login-inner"},React.DOM.h1(null,"a music quiz"),React.DOM.a({className:"m-login-link",href:this.state.loginUrl}," login with Spotify "),React.DOM.p({className:"m-login-cred"},"made by Erik Portin")):(b=Loading({module:"Login"}),this.tryLogin()),React.DOM.div({className:"l-view-outer"},React.DOM.div({className:"m-login l-view"},a),b)}});