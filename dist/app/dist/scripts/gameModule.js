"use strict";var GameView=React.createClass({displayName:"GameView",getInitialState:function(){return{game:""}},next:function(a){log("GameView: next"),a.next().then(function(a){log("GameView: got next round "+a.round.current.artist.name),log(a),a.isGameOver?Delay.f(function(){this.setState({game:a})}.bind(this,a)):this.setState({game:a})}.bind(this),function(){console.error("GameView: next()")})},handleNextRound:function(a,b){log("GameView: handleNextRound"),log(a),log(b),this.state.game.answer(a,b).then(function(a){log("GameView: answered"),log(a),this.next(a)}.bind(this),function(){console.error("GameView: failed to next round")})},getGame:function(a,b){log("GameView: getGame"),new Game(a,b,{gameLength:Settings.gameLength}).next().then(function(a){log("GameView: got new game "+a.round.current.artist.name+" - "+a.round.current.track.name),log(a),this.setState({game:a})}.bind(this),function(){console.error("GameView: failed to get game"),this.props.onError({text:"Failed to load playlist. Either the url is not valid, the playlist is private or it doesn't have enough variety",reset:!0})}.bind(this))},handleReplay:function(){log("GameView: handleReplay"),this.state.game.reset().next().then(function(a){log("GameView: got new game"),log(a),this.setState({game:a})}.bind(this),function(){console.error("GameView: failed to get game")})},componentDidMount:function(){log("GameView: componentDidMount"),this.state.game||this.getGame(this.props.playlistOwner,this.props.playlistId)},render:function(){log("GameView: render");var a="",b="";return this.state.game?a=this.state.game.isGameOver?GameOverView({game:this.state.game,onReplay:this.handleReplay,onBackToPlaylists:this.props.onBackToPlaylists,onShare:this.props.onShare}):Round({game:this.state.game,onNextRound:this.handleNextRound,onBackToPlaylists:this.props.onBackToPlaylists}):b=Loading({module:"GameView"}),React.DOM.div({className:"l-view-outer"},React.DOM.div({ref:"view",className:"m-game l-view"},a),b)}});