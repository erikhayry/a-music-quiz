var Round=React.createClass({displayName:"Round",getInitialState:function(){return{answer:"",musicLoaded:!1,musicPlaying:!1}},handleMusicLoaded:function(){this.setState({musicLoaded:!0})},handleMusicPlaying:function(){this.setState({answer:"",musicPlaying:!0})},handleAnswer:function(a){this.setState({answer:a}),setTimeout(function(){this.setState({musicLoaded:!1,musicPlaying:!1}),this.props.onNextRound(10)}.bind(this),500)},render:function(){console.log("render Round"),console.log(this.state);var a=React.DOM.p(null,"Loading round..."),b=this.props.game.current-1;if(this.state.musicPlaying)b=this.props.game.current,a=Options({answer:this.state.answer,options:this.props.game.options,onAnswer:this.handleAnswer});else if(this.state.musicLoaded){var c=b-1,d=this.props.game.history[c]?this.props.game.history[c].answer:void 0,e=this.props.game.history[c]?this.props.game.history[c].id:void 0;a=GameNav({previousAnswer:d,previousQuestion:e,onMusicPlay:this.handleMusicPlaying})}return React.DOM.div(null,React.DOM.div({className:"container"},React.DOM.ul({className:"nav nav-tabs nav-justified"},React.DOM.li(null,React.DOM.button(null,"x")),React.DOM.li(null,Points({points:this.props.game.points})))),React.DOM.div({className:"container"},MusicPlayer({url:this.props.game.url,musicPlaying:this.state.musicPlaying,musicLoaded:this.state.musicLoaded,onMusicLoaded:this.handleMusicLoaded})),React.DOM.div({className:"container"},a),React.DOM.div({className:"container"},Progress({gameLength:this.props.game.gameLength,current:b})))}});