"use strict";var PlaylistsView=React.createClass({displayName:"PlaylistsView",getInitialState:function(){return{playlists:""}},handleShare:function(a){a.preventDefault(),log("Playlist: handleShare"),this.props.onShare({url:window.location.origin+"?owner="+a.target.dataset.owner+"&id="+a.target.dataset.playlistid,text:"Play "+a.target.dataset.playlistname+" on aMusicQuiz.com"})},handlePlay:function(a){a.preventDefault(),log("Playlist: handlePlay"),this.props.onPlay(a.target.dataset.owner,a.target.dataset.playlistid)},getAllPlaylists:function(a){log("Playlist: getAllPlaylists "+a),spotifyService.getAllPlaylists(a).then(function(a){log("Playlist: got playlists"),log(a),this.setState({playlists:a.arr})}.bind(this),function(){log("Playlist: failed to get playlist"),this.props.onUnAuth()}.bind(this))},render:function(){log("Playlist: render");var a="",b="";if(this.state.playlists){var c={};this.state.playlists.forEach(function(a){console.log(a),a.total>=Settings.minPlaylistSize&&a.id&&(c["playlist"+a.id]=React.DOM.li({className:"m-playlists-list-item"},React.DOM.button({className:"m-playlists-play-btn","data-owner":a.owner,"data-playlistid":a.id,onClick:this.handlePlay},a.name),React.DOM.button({className:"m-playlists-share-btn","data-owner":a.owner,"data-playlistid":a.id,"data-playlistname":a.name,onClick:this.handleShare}," Share ")))}.bind(this)),a=React.DOM.ul({className:"m-playlists-list"},c)}else b=Loading({module:"Playlist"}),this.getAllPlaylists(this.props.player);return React.DOM.div({className:"l-view-outer"},React.DOM.div({ref:"view",className:"m-playlists l-view"},React.DOM.h1(null,"Play"),PlaylistInput({onPlay:this.props.onPlay,onUnvalidPlaylistUrl:this.props.onError}),React.DOM.h2(null,"Or choose one of your playlists"),a,React.DOM.button({className:"m-playlists-change-btn",onClick:this.props.onChangeUser},"Change user")),b)}});