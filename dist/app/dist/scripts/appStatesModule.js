"use strict";var GameOver=React.createClass({displayName:"GameOver",render:function(){return React.DOM.div(null," Game Over ")}}),Points=React.createClass({displayName:"Points",render:function(){return React.DOM.div(null," Points: ",this.props.points)}}),MusicPlayer=React.createClass({displayName:"MusicPlayer",render:function(){var a="",b="";return this.props.musicLoaded&&this.props.musicPlaying?a=30:this.props.musicLoaded||(b=React.DOM.audio({src:this.props.url}),setTimeout(function(){this.props.onMusicLoaded()}.bind(this),500)),React.DOM.div(null,React.DOM.h1(null,a),b)}}),Options=React.createClass({displayName:"Options",handleAnswer:function(a){this.props.onAnswer(a.target.dataset.answer)},render:function(){var a=[],b="",c=this.props.answer?"disabled":"";return this.props.options.forEach(function(d){b=d.id==this.props.answer?"is-active":"",a.push(React.DOM.button({disabled:c,className:b,onClick:this.handleAnswer,"data-answer":d.id,key:d.id},d.name))}.bind(this)),React.DOM.div(null,a)}}),GameNav=React.createClass({displayName:"GameNav",render:function(){var a="",b="";return this.props.previousQuestion?(console.log(this.props),b=this.props.previousAnswer==this.props.previousQuestion?"Right!":"Wrong!",a="Next"):a="Start",React.DOM.div(null,React.DOM.p(null,b),React.DOM.button({onClick:this.props.onMusicPlay},a))}}),Progress=React.createClass({displayName:"Progress",render:function(){for(var a=[],b="",c=1;c<this.props.gameLength+1;c++)b=c==this.props.current?"is-active":"",a.push(React.DOM.li({className:b,key:c},c));return React.DOM.div(null,React.DOM.ul({className:"pagination"},a))}}),Round=React.createClass({displayName:"Round",getInitialState:function(){return{answer:"",musicLoaded:!1,musicPlaying:!1}},handleMusicLoaded:function(){this.setState({musicLoaded:!0})},handleMusicPlaying:function(){this.setState({answer:"",musicPlaying:!0})},handleAnswer:function(a){this.setState({answer:a}),setTimeout(function(){this.setState({musicLoaded:!1,musicPlaying:!1}),this.props.onNextRound(10)}.bind(this),500)},render:function(){console.log("render Round"),console.log(this.state);var a=React.DOM.p(null,"Loading..."),b=this.props.game.current-1;if(this.state.musicPlaying)b=this.props.game.current,a=Options({answer:this.state.answer,options:this.props.game.options,onAnswer:this.handleAnswer});else if(this.state.musicLoaded){var c=b-1,d=this.props.game.history[c]?this.props.game.history[c].answer:void 0,e=this.props.game.history[c]?this.props.game.history[c].id:void 0;a=GameNav({previousAnswer:d,previousQuestion:e,onMusicPlay:this.handleMusicPlaying})}return React.DOM.div(null,React.DOM.div({className:"container"},React.DOM.ul({className:"nav nav-tabs nav-justified"},React.DOM.li(null,React.DOM.button(null,"x")),React.DOM.li(null,Points({points:this.props.game.points})))),React.DOM.div({className:"container"},MusicPlayer({url:this.props.game.url,musicPlaying:this.state.musicPlaying,musicLoaded:this.state.musicLoaded,onMusicLoaded:this.handleMusicLoaded})),React.DOM.div({className:"container"},a),React.DOM.div({className:"container"},Progress({gameLength:this.props.game.gameLength,current:b})))}}),Game=React.createClass({displayName:"Game",getInitialState:function(){return{game:""}},onGameOver:function(){},handleNextRound:function(a){this.setState({game:{points:this.state.game.points+a,gameLength:4,current:this.state.game.current+1,options:[{name:"Option 1",id:"1"},{name:"Option 2",id:"2"},{name:"Option 3",id:"3"},{name:"Option 4",id:"4"}],question:{id:2,url:"http://url.com"},history:[{name:"Song 1",url:"url1.com",id:"1",answer:"2"},{name:"Song 2",url:"url2.com",points:29,id:"2",answer:"2"},{name:"Song 1",url:"url1.com",id:"1",answer:"1"},{name:"Song 2",url:"url2.com",points:29,id:"2",answer:"2"}]}})},render:function(){console.log("render Game"),console.log(this.state);var a=React.DOM.p(null,"Loading...");return this.state.game.gameLength&&this.state.game.gameLength<this.state.game.current?a=React.DOM.p(null,"Game Over"):this.state.game?a=Round({game:this.state.game,onNextRound:this.handleNextRound,onGameOver:this.handleGameOver}):setTimeout(function(){this.setState({game:{points:0,gameLength:4,current:1,options:[{name:"Option 1",id:"1"},{name:"Option 2",id:"2"},{name:"Option 3",id:"3"},{name:"Option 4",id:"4"}],question:{id:1,url:"http://url.com"},history:[]}})}.bind(this),500),React.DOM.div(null,a)}}),Playlists=React.createClass({displayName:"Playlists",handlePlay:function(a){var b=a.target.dataset.user,c=a.target.dataset.playlist;this.props.onPlay(b,c)},share:function(a){var b=a.target.dataset.user,c=a.target.dataset.playlist;console.log("share",b,c)},render:function(){console.log("render Playlists");var a=this.props.playlists.map(function(a){return React.DOM.li({key:a.id},a.name," | ",React.DOM.button({"data-user":a.user,"data-playlist":a.id,onClick:this.handlePlay},"Play")," | ",React.DOM.button({"data-user":a.user,"data-playlist":a.id,onClick:this.share},"Share"))}.bind(this));return React.DOM.div(null,React.DOM.ul(null,a))}}),App=React.createClass({displayName:"App",getInitialState:function(){return{playlists:"",user:"",id:""}},handleAuth:function(a){this.setState({playlists:a})},handlePlay:function(a,b){setTimeout(function(){this.setState({user:a,id:b})}.bind(this),500)},render:function(){console.log("render App");var a=React.DOM.p(null,"Loading...");return a=this.state.user&&this.state.id?Game({id:this.state.id,user:this.state.user}):this.state.playlists?Playlists({onPlay:this.handlePlay,playlists:this.state.playlists}):Login({onAuth:this.handleAuth}),React.DOM.div(null,a)}});